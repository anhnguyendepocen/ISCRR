{
    "collab_server" : "",
    "contents" : "# Load libraries\nlibrary(\"knitr\")\noptions(digits=2)\nlibrary(\"rmarkdown\")\nlibrary(\"devtools\")\nlibrary(\"readr\")\nlibrary(\"tidyr\")\nlibrary(\"ggplot2\")\nlibrary(\"ggthemes\")\nlibrary(\"gridExtra\")\nlibrary(\"dplyr\")\nlibrary(\"lubridate\")\nlibrary(\"GGally\")\nlibrary(\"rworldmap\")\nlibrary(\"ggmap\")\nlibrary(\"scales\")\nlibrary(\"dichromat\")\nlibrary(\"RColorBrewer\")\nlibrary(\"viridis\")\nlibrary(\"purrr\")\nlibrary(\"broom\")\nlibrary(\"timeDate\")\nlibrary(\"haven\")\nlibrary(\"boot\")\n\n# Read PISA data\nstudent2012.sub <- readRDS(\"data/student_sub.rds\")\nworld <- getMap(resolution = \"low\")\nextractPolys <- function(p) {\n  polys <- NULL\n  for (i in 1:length(p)) {\n    for (j in 1:length(p[[i]]@Polygons)) {\n      x <- p[[i]]@Polygons[[j]]@coords\n      polys$lon <- c(polys$lon, x[,1])\n      polys$lat <- c(polys$lat, x[,2])\n      polys$ID <- c(polys$ID, rep(p[[i]]@ID, nrow(x)))\n      polys$region <- c(polys$region, rep(paste(p[[i]]@ID, j, sep=\"_\"), nrow(x)))\n      polys$order <- c(polys$order, 1:nrow(x))\n    }\n  }\n  return(data.frame(polys))\n}\npolys <- extractPolys(world@polygons)\n\n# Map theme\ntheme_map <- theme_bw()\ntheme_map$line <- element_blank()\ntheme_map$strip.text <- element_blank()\ntheme_map$axis.text <- element_blank()\ntheme_map$plot.title <- element_blank()\ntheme_map$axis.title <- element_blank()\ntheme_map$panel.border <- element_rect(colour = \"grey90\", size=1, fill=NA)\nstudent2012.sub$ST04Q01 <- factor(student2012.sub$ST04Q01,\n  levels=c(1,2), labels=c(\"Female\", \"Male\"))\n\n# Calculate the statistics\nstudent2012.stats <- student2012.sub %>%\n  group_by(CNT) %>%\n  summarise(mathgap=mean(PV1MATH[ST04Q01==\"Male\"], na.rm=T)-\n                    mean(PV1MATH[ST04Q01==\"Female\"], na.rm=T),\n            wmathgap=weighted.mean(PV1MATH[ST04Q01==\"Male\"],\n                                   w=SENWGT_STU[ST04Q01==\"Male\"], na.rm=T)-\n                     weighted.mean(PV1MATH[ST04Q01==\"Female\"],\n                                   w=SENWGT_STU[ST04Q01==\"Female\"], na.rm=T))\n\n# Compute confidence intervals\ncifn <- function(d, i) {\n  x <- d[i,]\n  ci <- weighted.mean(x$PV1MATH[x$ST04Q01==\"Male\"],\n                                   w=x$SENWGT_STU[x$ST04Q01==\"Male\"], na.rm=T)-\n                     weighted.mean(x$PV1MATH[x$ST04Q01==\"Female\"],\n                                   w=x$SENWGT_STU[x$ST04Q01==\"Female\"], na.rm=T)\n  ci\n}\nbootfn <- function(d) {\n  r <- boot(d, statistic=cifn, R=100)\n  l <- sort(r$t)[5]\n  u <- sort(r$t)[95]\n  ci <- c(l, u)\n  return(ci)\n}\n\nstudent2012.sub.summary.gap.boot <- student2012.sub %>%\n  split(.$CNT) %>% purrr::map(bootfn) %>% data.frame() %>%\n  gather(CNT, value)\nstudent2012.sub.summary.gap.boot$ci <-\n  rep(c(\"ml\",\"mu\"), length(unique(student2012.sub.summary.gap.boot$CNT)))\nstudent2012.sub.summary.gap.boot.wide <- student2012.sub.summary.gap.boot %>% spread(ci, value)\nstudent2012.sub.summary.gap <- merge(student2012.stats, student2012.sub.summary.gap.boot.wide)\n\n# Match three digit codes to country names\nstudent2012.sub.summary.gap$name <- NA\nfor (i in 1:length(student2012.sub.summary.gap$name))\n  student2012.sub.summary.gap$name[i] <-\n  isoToName(as.character(student2012.sub.summary.gap$CNT[i]))\n# QCN is Shanghai, not whole of China - Don't know what country TAP is\nstudent2012.sub.summary.gap$name[student2012.sub.summary.gap$CNT == \"QCN\"] <- isoToName(\"CHN\")\nstudent2012.sub.summary.gap$name[student2012.sub.summary.gap$CNT == \"TAP\"] <- \"TAP\"\n\n# Make a categorical gap variable\nstudent2012.sub.summary.gap$wmathgap_cat <- \"same\"\nstudent2012.sub.summary.gap$wmathgap_cat[student2012.sub.summary.gap$ml > 0] <- \"boys\"\nstudent2012.sub.summary.gap$wmathgap_cat[student2012.sub.summary.gap$mu < 0] <- \"girls\"\n\n# Set order of countries by math gap\nstudent2012.sub.summary.gap$CNT <- factor(student2012.sub.summary.gap$CNT,\n      levels=student2012.sub.summary.gap$CNT[order(student2012.sub.summary.gap$wmathgap)])\nstudent2012.sub.summary.gap$name <- factor(student2012.sub.summary.gap$name,\n      levels=student2012.sub.summary.gap$name[order(student2012.sub.summary.gap$wmathgap)])\n\n# Plot\nggplot(data=student2012.sub.summary.gap) +\n  geom_hline(yintercept=0, colour=\"grey80\") + coord_flip() + theme_bw() +\n  geom_point(aes(x=name, y=wmathgap, color=wmathgap_cat), size=3) +\n  geom_segment(aes(x=name, xend=name, y=ml, yend=mu, color=wmathgap_cat)) +\n  xlab(\"\") +\n  scale_colour_manual(\"\", values=c(\"boys\"=\"skyblue\", \"girls\"=\"pink\", \"same\"=\"lightgreen\")) +\n  scale_y_continuous(\"Girls <----------> Boys\", breaks=seq(-30, 30, 10), limits=c(-35, 35),\n                     labels=c(seq(30, 0, -10), seq(10, 30, 10))) +\n  theme(axis.text.x = element_text(size=5), axis.text.y = element_text(size=5),\n        axis.title = element_text(size=7), legend.text = element_text(size=5),\n        legend.title = element_text(size=5))\npolys <- polys %>% rename(name = ID)\nstudent2012.sub.map <- left_join(student2012.sub.summary.gap, polys)\nstudent2012.sub.map <- student2012.sub.map %>% arrange(region, order)\n\nggplot(data=polys) +\n  geom_path(aes(x=lon, y=lat, group=region, order=order), colour=I(\"grey90\"), size=0.1) +\n  geom_polygon(data=student2012.sub.map, aes(x=lon, y=lat, group=region, order=order,  fill=wmathgap_cat)) +\n  scale_fill_manual(\"Diff>5\", values=c(\"boys\"=\"skyblue\", \"girls\"=\"pink\", \"same\"=\"lightgreen\")) +\n  scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +\n  coord_equal() + theme_map\nCO2.ptb<-read.table(\"http://scrippsco2.ucsd.edu/sites/default/files/data/flask_co2_and_isotopic/daily_co2/fldav_ptb.csv\", sep=\",\", skip=69)\ncolnames(CO2.ptb)<-c(\"date\", \"time\", \"day\", \"decdate\", \"n\", \"flg\", \"co2\")\nCO2.ptb$lat<-71.3\nCO2.ptb$lon<-(-156.6)\nCO2.ptb$stn<-\"ptb\"\n\nCO2.ljo<-read.table(\"http://scrippsco2.ucsd.edu/sites/default/files/data/flask_co2_and_isotopic/daily_co2/fldav_ljo.csv\", sep=\",\", skip=69)\ncolnames(CO2.ljo)<-c(\"date\", \"time\", \"day\", \"decdate\", \"n\", \"flg\", \"co2\")\nCO2.ljo$lat<-32.9\nCO2.ljo$lon<-(-117.3)\nCO2.ljo$stn<-\"ljo\"\n\nCO2.mlf<-read.table(\"http://scrippsco2.ucsd.edu/sites/default/files/data/flask_co2_and_isotopic/daily_co2/fldav_mlf.csv\", sep=\",\", skip=69)\ncolnames(CO2.mlf)<-c(\"date\", \"time\", \"day\", \"decdate\", \"n\", \"flg\", \"co2\")\nCO2.mlf$lat<-19.5\nCO2.mlf$lon<-(-155.6)\nCO2.mlf$stn<-\"mlf\"\n\nCO2.spo<-read.table(\"http://scrippsco2.ucsd.edu/sites/default/files/data/flask_co2_and_isotopic/daily_co2/fldav_spo.csv\", sep=\",\", skip=69)\ncolnames(CO2.spo)<-c(\"date\", \"time\", \"day\", \"decdate\", \"n\", \"flg\", \"co2\")\nCO2.spo$lat<- (-90.0)\nCO2.spo$lon<-0\nCO2.spo$stn<-\"spo\"\n\nCO2.ker<-read.table(\"http://scrippsco2.ucsd.edu/sites/default/files/data/flask_co2_and_isotopic/daily_co2/fldav_ker.csv\", sep=\",\", skip=69)\ncolnames(CO2.ker)<-c(\"date\", \"time\", \"day\", \"decdate\", \"n\", \"flg\", \"co2\")\nCO2.ker$lat<-(-29.2)\nCO2.ker$lon<-(-177.9)\nCO2.ker$stn<-\"ker\"\n\nCO2.all<-rbind(CO2.ker,CO2.ljo,CO2.mlf,CO2.ptb,CO2.spo)\nCO2.all$date<-as.Date(CO2.all$date)\n\nCO2.all$invlat=-1*CO2.all$lat\nCO2.all$stn=reorder(CO2.all$stn,CO2.all$invlat)\n\nCO2.all.loc <- rbind(CO2.ker[1,],CO2.ljo[1,],CO2.mlf[1,],CO2.ptb[1,],CO2.spo[1,])\n\np1 <- qplot(date, co2, data=subset(CO2.all, flg < 2), colour=stn, geom=\"line\",xlab=\"Year\",ylab=\"CO2 (ppm)\") +\n\t\tfacet_wrap(~stn, ncol=1) + theme(axis.text.y=element_text(size = 6), legend.position=\"none\")\np2 <- qplot(date, co2, data=subset(CO2.all, flg < 2), colour=stn, geom=\"line\",xlab=\"Year\",ylab=\"CO2 (ppm)\") +\n  theme(axis.text.y=element_text(size = 6), legend.position=\"none\")\ngrid.arrange(p1, p2, ncol=2)\nggplot(data=polys) +\n  geom_path(aes(x=lon, y=lat, group=region, order=order), colour=I(\"grey90\"), size=0.1) +\n  geom_point(data=CO2.all.loc, aes(x=lon, y=lat, group=1), colour=\"red\",\n                      size=2, alpha=0) +\n  geom_text(data=CO2.all.loc, aes(x=lon, y=lat, label=stn, group=1),\n            colour=\"orange\", size=5) +\n  coord_equal() + theme_map\n\n## # devtools::install_github(\"metacran/crandb\")\n## # pkgs <- crandb::list_packages(limit = 999999)\n## # length(pkgs)\n## # [1] 7330\n\nworkers <- read_csv(file=\"data/Assembled_Workers__Compensation_Claims___Beginning_2000.csv\", n_max=50)\nworkers <- read.csv(file=\"data/Assembled_Workers__Compensation_Claims___Beginning_2000.csv\", nrows=50)\n\ndim(workers)\ncolnames(workers)\ntypeof(workers$`Claim Identifier`)\ntypeof(workers$Claim.Identifier)\ntypeof(workers$`Claim Type`)\nset.seed(1000)\nx <- rnorm(4)\nx\nsum(x + 10)\nx[1]\nx[c(T, F, T, T, F, F)]\nx <- list(\n  a = 10,\n  b = c(1, \"2\")\n)\nx$a\nx[[\"a\"]]\nx[\"a\"]\nstr(x)\nmean(workers$`Birth Year`)\nmean(workers$`Birth Year`, na.rm=TRUE)\ntable(workers$Gender)\ntable(workers$Gender, workers$`Zip Code`)\n## browseVignettes(\"dplyr\")\n`+`\n\"+\" <- function(x, y) \"I forgot how to add\"\n1 + 2\nrm(\"+\")\n\n## workers <- read_csv(file=\"data/Assembled_Workers__Compensation_Claims___Beginning_2000.csv\", n_max=1000)\n## table(workers$`Claim Type`)\n## mean(workers$`Birth Year`, na.rm=TRUE)\n## sd(workers$`Birth Year`, na.rm=TRUE)\n## summary(workers$`Birth Year`)\n",
    "created" : 1463702745402.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "463401441",
    "id" : "696971F2",
    "lastKnownWriteTime" : 1463703709,
    "last_content_update" : 1463703709595,
    "path" : "~/talks/ISCRR/ISCRR/Workshop 1/1-intro.R",
    "project_path" : "1-intro.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}