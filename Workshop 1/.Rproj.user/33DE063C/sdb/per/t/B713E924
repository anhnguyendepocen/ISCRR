{
    "collab_server" : "",
    "contents" : "# Load libraries\nlibrary(\"knitr\")\noptions(digits=2)\nlibrary(\"rmarkdown\")\nlibrary(\"devtools\")\nlibrary(\"readr\")\nlibrary(\"tidyr\")\nlibrary(\"ggplot2\")\nlibrary(\"ggthemes\")\nlibrary(\"gridExtra\")\nlibrary(\"dplyr\")\nlibrary(\"lubridate\")\nlibrary(\"GGally\")\nlibrary(\"rworldmap\")\nlibrary(\"ggmap\")\nlibrary(\"scales\")\nlibrary(\"dichromat\")\nlibrary(\"RColorBrewer\")\nlibrary(\"viridis\")\nlibrary(\"purrr\")\nlibrary(\"broom\")\nlibrary(\"timeDate\")\nlibrary(\"haven\")\nlibrary(\"boot\")\n\n# Workers\nworkers <- read_csv(\n  file=\"data/Assembled_Workers__Compensation_Claims___Beginning_2000.csv\")\nworkers$`Accident Date` <- as.Date(workers$`Accident Date`,\n                                    format=\"%m/%d/%Y\")\nworkers$year <- year(workers$`Accident Date`)\nworkers$month <- month(workers$`Accident Date`, \n                       label=TRUE, abbr=TRUE)\nworkers$wday <- wday(workers$`Accident Date`, \n                     label=TRUE, abbr=TRUE)\nworkers$timeindx <- as.numeric(workers$`Accident Date`-\n        as.Date(\"01/01/2000\", format=\"%m/%d/%Y\"))\nws <- workers %>% filter(year > 1999 & year < 2015)\nws$wday <- factor(ws$wday, levels=levels(ws$wday)[c(2:7,1)])\nwsd <- ws %>% group_by(timeindx) %>% tally()\nggplot(wsd, aes(timeindx, n)) + geom_point()\nwsddj <- ws %>% filter(year==2001&month==\"Sep\") %>% \n  group_by(`Accident Date`) %>% tally()\nggplot(wsddj, aes(x=`Accident Date`, n)) + \n  geom_point() + geom_line()\nwsddj <- ws %>% filter(year==2014&month==\"Jan\") %>% \n  group_by(`Accident Date`) %>% tally()\nggplot(wsddj, aes(x=`Accident Date`, n)) + \n  geom_point() + geom_line()\n\n## ws %>% filter(`Accident Date`== as.Date(\"2001-09-11\")) %>%\n##   group_by(`Claim Type`) %>% tally()\nmonnb <- function(d) { \n  lt <- as.POSIXlt(as.Date(d, origin=\"1900-01-01\"))\n  lt$year*12 + lt$mon \n}\nmondf <- function(d1, d2) { \n  monnb(d2) - monnb(d1) \n}\nws$timeindx_mths <- mondf(min(ws$`Accident Date`), \n                          ws$`Accident Date`)\nwsw <- ws %>% group_by(timeindx) %>% \n  summarise(n=length(timeindx), \n            timeindx_mths=timeindx_mths[1],\n            date=min(`Accident Date`))\nwsw.s <- wsw %>% group_by(timeindx_mths) %>% \n  summarise(m=median(n), q1=quantile(n, 0.25), \n            q3=quantile(n, 0.75), min=min(n), \n            max=max(n), date=min(date))\nggplot(wsw.s, aes(x=date, y=m)) + \n  geom_ribbon(aes(ymin=min, ymax=max), fill=\"#08519C\", \n              alpha=0.1) +\n  geom_ribbon(aes(ymin=q1, ymax=q3), fill=\"#08519C\", \n              alpha=0.5) +\n  geom_line(aes(y=m), colour=\"#08519C\") +\n  ylim(c(0,2000)) +\n  xlab(\"\") + ylab(\"count\")\nggplot(wsw.s, aes(x=date, y=m)) + \n  geom_ribbon(aes(ymin=min, ymax=max), fill=\"#08519C\", alpha=0.1) +\n  geom_ribbon(aes(ymin=q1, ymax=q3), fill=\"#08519C\", alpha=0.5) +\n  geom_line(aes(y=m), colour=\"#08519C\") +\n  ylim(c(0,2000)) +\n  xlab(\"\") + ylab(\"count\")\n\n# PISA\nstudent2012.sub <- readRDS(\"data/student_sub.rds\")\ndim(student2012.sub)\nstudent2012.sub$ST04Q01 <- factor(student2012.sub$ST04Q01, \n  levels=c(1,2), labels=c(\"Female\", \"Male\"))\nstudent2012.stats <- student2012.sub %>% \n  group_by(CNT) %>%\n  summarise(wmathgap=weighted.mean(PV1MATH[ST04Q01==\"Male\"], \n                  w=SENWGT_STU[ST04Q01==\"Male\"], na.rm=T)-\n               weighted.mean(PV1MATH[ST04Q01==\"Female\"],\n                  w=SENWGT_STU[ST04Q01==\"Female\"], na.rm=T))\nggplot(data=student2012.stats) + \n  geom_point(aes(x=CNT, y=wmathgap), size=3) + \n coord_flip() + theme_bw()\n## student2012.stats$CNT <- factor(student2012.stats$CNT,\n##     levels=student2012.stats$CNT[order(student2012.stats$wmathgap)])\n## ggplot(data=student2012.stats) +\n##   geom_point(aes(x=CNT, y=wmathgap), size=3) +\n##  coord_flip() + theme_bw()\n\ncifn <- function(d, i) {\n  x <- d[i,]\n  ci <- weighted.mean(x$PV1MATH[x$ST04Q01==\"Male\"], \n          w=x$SENWGT_STU[x$ST04Q01==\"Male\"], na.rm=T)-\n        weighted.mean(x$PV1MATH[x$ST04Q01==\"Female\"],\n          w=x$SENWGT_STU[x$ST04Q01==\"Female\"], na.rm=T)\n  ci\n}\nbootfn <- function(d) {\n  r <- boot(d, statistic=cifn, R=100)\n  l <- sort(r$t)[5]\n  u <- sort(r$t)[95]\n  ci <- c(l, u)\n  return(ci)\n}\nstudent2012.sub.summary.gap.boot <- student2012.sub %>% \n  split(.$CNT) %>% purrr::map(bootfn) %>% data.frame() %>%\n  gather(CNT, value)\nstudent2012.sub.summary.gap.boot$ci <- \n  rep(c(\"ml\",\"mu\"), \n      length(unique(student2012.sub.summary.gap.boot$CNT)))\nstudent2012.sub.summary.gap.boot.wide <- \n  student2012.sub.summary.gap.boot %>% \n  spread(ci, value)\nstudent2012.sub.summary.gap <- merge(student2012.stats,\n  student2012.sub.summary.gap.boot.wide)\n\nstudent2012.sub.summary.gap$name <- NA\nfor (i in 1:length(student2012.sub.summary.gap$name))  \n  student2012.sub.summary.gap$name[i] <-\n  isoToName(as.character(student2012.sub.summary.gap$CNT[i]))\n# QCN is Shanghai, not whole of China - \n# Don't know what country TAP is\nstudent2012.sub.summary.gap$name[\n  student2012.sub.summary.gap$CNT == \"QCN\"] <- \n  isoToName(\"CHN\")\nstudent2012.sub.summary.gap$name[\n  student2012.sub.summary.gap$CNT == \"TAP\"] <- \n  \"TAP\"\nstudent2012.sub.summary.gap$wmathgap_cat <- \"same\"\nstudent2012.sub.summary.gap$wmathgap_cat[\n  student2012.sub.summary.gap$ml > 0] <- \"boys\"\nstudent2012.sub.summary.gap$wmathgap_cat[\n  student2012.sub.summary.gap$mu < 0] <- \"girls\"\nstudent2012.sub.summary.gap$CNT <- factor(\n  student2012.sub.summary.gap$CNT, \n      levels=student2012.sub.summary.gap$CNT[\n        order(student2012.sub.summary.gap$wmathgap)])\nggplot(data=student2012.sub.summary.gap) + \n  geom_hline(yintercept=0, colour=\"grey80\") + \n  geom_point(aes(x=name, y=wmathgap, color=wmathgap_cat), \n             size=3) + \n  geom_segment(aes(x=name, xend=name, y=ml, yend=mu, \n                   color=wmathgap_cat)) + \n  coord_flip() + theme_bw() \nggplot(data=student2012.sub.summary.gap) + \n  geom_hline(yintercept=0, colour=\"grey80\") + \n  geom_point(aes(x=name, y=wmathgap, color=wmathgap_cat), \n             size=3) + \n  geom_segment(aes(x=name, xend=name, y=ml, yend=mu, \n                   color=wmathgap_cat)) + \n  xlab(\"\") +  \n  scale_colour_manual(\"\", values=c(\"boys\"=\"skyblue\", \n    \"girls\"=\"pink\", \"same\"=\"lightgreen\")) +\n  scale_y_continuous(\"Girls <----------> Boys\", \n    breaks=seq(-30, 30, 10), limits=c(-35, 35), \n    labels=c(seq(30, 0, -10), seq(10, 30, 10))) + \n  coord_flip() + theme_bw() + \n  theme(axis.text.x = element_text(size=5), \n        axis.text.y = element_text(size=5), \n        axis.title = element_text(size=7), \n        legend.text = element_text(size=5),\n        legend.title = element_text(size=5))\nworld <- getMap(resolution = \"low\")\nextractPolys <- function(p) {\n  polys <- NULL\n  for (i in 1:length(p)) {\n    for (j in 1:length(p[[i]]@Polygons)) {\n      x <- p[[i]]@Polygons[[j]]@coords\n      polys$lon <- c(polys$lon, x[,1])\n      polys$lat <- c(polys$lat, x[,2])\n      polys$ID <- c(polys$ID, rep(p[[i]]@ID, nrow(x)))\n      polys$region <- c(polys$region, \n        rep(paste(p[[i]]@ID, j, sep=\"_\"), nrow(x)))\n      polys$order <- c(polys$order, 1:nrow(x))\n    }\n  }\n  return(data.frame(polys))\n}\npolys <- extractPolys(world@polygons)\nhead(polys)\npolys <- polys %>% rename(name = ID)\nstudent2012.sub.map <- left_join(\n  student2012.sub.summary.gap, polys)\nstudent2012.sub.map <- student2012.sub.map %>% \n  arrange(region, order)\ntheme_map <- theme_bw()\ntheme_map$line <- element_blank()\ntheme_map$strip.text <- element_blank()\ntheme_map$axis.text <- element_blank()\ntheme_map$plot.title <- element_blank()\ntheme_map$axis.title <- element_blank()\ntheme_map$panel.border <- element_rect(\n  colour = \"grey90\", size=1, fill=NA)\nggplot(data=polys) + \n  geom_path(aes(x=lon, y=lat, group=region, order=order), \n            colour=I(\"grey90\"), size=0.1) + \n  geom_polygon(data=student2012.sub.map, aes(x=lon, y=lat, \n            group=region, order=order,  \n            fill=wmathgap_cat)) +\n  scale_fill_manual(\"Diff>5\", values=c(\"boys\"=\"skyblue\", \n                                    \"girls\"=\"pink\", \n                                    \"same\"=\"lightgreen\")) + \n  scale_x_continuous(expand=c(0,0)) + \n  scale_y_continuous(expand=c(0,0)) +\n  coord_equal() + theme_map \nws <- workers %>% filter(year > 1999)\np1 <- ggplot(ws, aes(x=year)) + geom_bar()\np2 <- ggplot(ws, aes(x=wday)) + geom_bar()\np3 <- ggplot(ws, aes(x=month)) + geom_bar()\ngrid.arrange(p1, p2, p3, layout_matrix = rbind(c(1,2),c(3,3)))\nws <- workers %>% filter(year > 1999)\n",
    "created" : 1463725073073.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3935772534",
    "id" : "B713E924",
    "lastKnownWriteTime" : 1463546203,
    "last_content_update" : 1463546203,
    "path" : "~/talks/ISCRR/ISCRR/Workshop 1/4-adv-plots.R",
    "project_path" : "4-adv-plots.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}